// Generated by CoffeeScript 1.6.3
var Slide;

Slide = (function() {
  function Slide(containerElem, data) {
    this.currentSlide = null;
    this.containerElem = containerElem;
    this.data = data;
    this.init();
  }

  Slide.prototype.init = function() {
    var _this = this;
    this.setSize();
    $(window).resize(function() {
      return _this.setSize();
    });
    return $(window).keyup(function(key) {
      return _this.handleKeyUp(key);
    });
  };

  Slide.prototype.handleKeyUp = function(key) {
    if (key.keyCode === 37) {
      if (this.data[this.currentIndex].keyUp && this.data[this.currentIndex].keyUp.left && this.data[this.currentIndex].keyUp.left(this.currentSlide)) {
        return;
      }
      return this.gotoPrev();
    } else if (key.keyCode === 39 || key.keyCode === 32) {
      if (this.data[this.currentIndex].keyUp && this.data[this.currentIndex].keyUp.right && this.data[this.currentIndex].keyUp.right(this.currentSlide)) {
        return;
      }
      return this.gotoNext();
    }
  };

  Slide.prototype.setSize = function() {
    this.containerElem.css({
      "width": $(window).width(),
      "height": $(window).height()
    });
    if (this.currentSlide) {
      return this.currentSlide.css({
        "width": $(window).width(),
        "height": $(window).height()
      });
    }
  };

  Slide.prototype.run = function() {};

  Slide.prototype.show = function(index) {
    var data, prevSlide,
      _this = this;
    prevSlide = this.currentSlide;
    data = this.data[index];
    if (!data.innerHTML) {
      data.innerHTML = "";
    }
    this.currentSlide = $("<div class=\"slide slide-" + index + "\">" + data.innerHTML + "</div>");
    this.currentSlide.css({
      "background": "url(" + data.background + ") no-repeat",
      "width": $(window).width(),
      "height": $(window).height()
    });
    this.containerElem.append(this.currentSlide);
    this.currentIndex = index;
    this.showSlideTransitionAnimation(prevSlide, this.currentSlide);
    return this.currentSlide.ready(function() {
      if (data.ready && typeof data.ready === "function") {
        return data.ready(_this.currentSlide);
      }
    });
  };

  Slide.prototype.showSlideTransitionAnimation = function(prev, current) {
    if (prev) {
      prev.fadeOut(100, function() {
        return prev.remove();
      });
    }
    return current.fadeIn(100);
  };

  Slide.prototype.gotoPrev = function() {
    if (this.currentIndex - 1 >= 0) {
      return this.show(this.currentIndex - 1);
    }
  };

  Slide.prototype.gotoNext = function() {
    if (this.currentIndex + 1 < this.data.length) {
      return this.show(this.currentIndex + 1);
    }
  };

  return Slide;

})();
